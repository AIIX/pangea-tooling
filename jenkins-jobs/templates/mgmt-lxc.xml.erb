<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>true</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.TimerTrigger>
      <spec>H 9-16/2 * * *</spec>
    </hudson.triggers.TimerTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

TIMEOUT=30
TEMPLATE=download
DIST=ubuntu
RELEASE=<%= distribution %>
NAME=<%= distribution %>_<%= type %>
ARCH=amd64
PACKAGES=&quot;xz-utils dpkg-dev ruby dput debhelper pkg-kde-tools devscripts python-launchpadlib ubuntu-dev-tools git dh-systemd ruby-dev zlib1g-dev&quot;

export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:$PATH
env

function cleanup {
  lxc-stop -n $NAME || true
  lxc-wait -n $NAME --state=STOPPED --timeout=30 || true
}
trap cleanup EXIT

if ! lxc-ls | grep $NAME; then
  lxc-create -t $TEMPLATE -n $NAME -- -d $DIST -r $RELEASE -a $ARCH
fi

lxc-ls -f

lxc-wait -n $NAME --state=STOPPED --timeout=30
lxc-start -n $NAME --daemon
lxc-wait -n $NAME --state=RUNNING --timeout=30

for i in $(seq 1 $TIMEOUT); do
    if [ -n &quot;$(lxc-info --no-humanize --ips -n $NAME)&quot; ]; then
        HAS_IP=true
        break
    fi
    sleep 1
done
if [ ! $HAS_IP ]; then
    echo &quot;For some reason the container did not get an IP address. Aborting...&quot;
    exit 1
fi
lxc-ls -f

echo &apos;Acquire::http { Proxy &quot;http://10.0.3.1:3142&quot;; };&apos; | lxc-attach -n $NAME tee /etc/apt/apt.conf.d/apt-cacher
lxc-attach -n $NAME -- apt-get update
lxc-attach -n $NAME -- apt-get dist-upgrade -y
lxc-attach -n $NAME -- apt-get install $PACKAGES -y

lxc-stop -n $NAME
lxc-wait -n $NAME --state=STOPPED --timeout=30</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.plugins.ircbot.IrcPublisher plugin="ircbot@2.25">
      <targets>
        <hudson.plugins.im.GroupChatIMMessageTarget plugin="instant-messaging@1.30">
          <name>#apacheloggerslounge</name>
          <notificationOnly>false</notificationOnly>
        </hudson.plugins.im.GroupChatIMMessageTarget>
      </targets>
      <strategy>FAILURE_AND_FIXED</strategy>
      <notifyOnBuildStart>false</notifyOnBuildStart>
      <notifySuspects>false</notifySuspects>
      <notifyCulprits>false</notifyCulprits>
      <notifyFixers>false</notifyFixers>
      <notifyUpstreamCommitters>false</notifyUpstreamCommitters>
      <buildToChatNotifier class="hudson.plugins.im.build_notify.DefaultBuildToChatNotifier" plugin="instant-messaging@1.30"/>
      <matrixMultiplier>ONLY_CONFIGURATIONS</matrixMultiplier>
      <channels/>
    </hudson.plugins.ircbot.IrcPublisher>
    <hudson.plugins.parameterizedtrigger.BuildTrigger plugin="parameterized-trigger@2.25">
      <configs>
        <hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
          <configs class="empty-list"/>
          <projects><%= dependees.join(', ') %>,</projects>
          <condition>SUCCESS</condition>
          <triggerWithNoParameters>false</triggerWithNoParameters>
        </hudson.plugins.parameterizedtrigger.BuildTriggerConfig>
      </configs>
    </hudson.plugins.parameterizedtrigger.BuildTrigger>
  </publishers>
  <buildWrappers/>
</project>
