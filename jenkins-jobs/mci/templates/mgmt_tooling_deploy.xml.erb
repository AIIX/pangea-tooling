<?xml version='1.0' encoding='UTF-8'?>
<matrix-project plugin="matrix-project@1.6">
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>master</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <authToken>magicalponies</authToken>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <axes>
    <org.jenkinsci.plugins.elasticaxisplugin.ElasticAxis plugin="elastic-axis@1.2">
      <name>label</name>
      <label>amd64,amd64-neon,armhf,aarch64,master</label>
      <ignoreOffline>false</ignoreOffline>
    </org.jenkinsci.plugins.elasticaxisplugin.ElasticAxis>
  </axes>
  <builders>
    <org.jenkinsci.plugins.ParameterizedRemoteTrigger.RemoteBuildConfiguration plugin="Parameterized-Remote-Trigger@2.2.2">
      <token/>
      <remoteJenkinsName>DCI</remoteJenkinsName>
      <job>mgmt_tooling_deploy</job>
      <shouldNotFailBuild>true</shouldNotFailBuild>
      <pollInterval>10</pollInterval>
      <connectionRetryLimit>5</connectionRetryLimit>
      <preventRemoteBuildQueue>false</preventRemoteBuildQueue>
      <blockBuildUntilComplete>false</blockBuildUntilComplete>
      <enhancedLogging>false</enhancedLogging>
      <parameters>remote=yes</parameters>
      <parameterList>
        <string>remote=yes</string>
      </parameterList>
      <overrideAuth>false</overrideAuth>
      <auth>
        <org.jenkinsci.plugins.ParameterizedRemoteTrigger.Auth>
          <NONE>none</NONE>
          <API__TOKEN>apiToken</API__TOKEN>
          <CREDENTIALS__PLUGIN>credentialsPlugin</CREDENTIALS__PLUGIN>
        </org.jenkinsci.plugins.ParameterizedRemoteTrigger.Auth>
      </auth>
      <loadParamsFromFile>false</loadParamsFromFile>
      <parameterFile/>
      <queryString/>
    </org.jenkinsci.plugins.ParameterizedRemoteTrigger.RemoteBuildConfiguration>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.37">
      <project>mgmt_tooling_progenitor</project>
      <filter></filter>
      <target></target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.TriggeredBuildSelector">
        <fallbackToLastSuccessful>true</fallbackToLastSuccessful>
        <upstreamFilterStrategy>UseGlobalSetting</upstreamFilterStrategy>
        <allowUpstreamDependencies>false</allowUpstreamDependencies>
      </selector>
      <doNotFingerprintArtifacts>false</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>export GEM_HOME=$(ruby -rubygems -e &apos;puts Gem.user_dir&apos;)
export GEM_PATH=$GEM_HOME:$HOME/.gems/bundler
export PATH=$GEM_HOME/bin:$PATH
hostname
lsb_release -a
ruby -e &apos;print Gem.user_dir&apos;
env
ls -ah

pwd

tar -xf *.tar.gz

rm -rv .bundle || true
gem install --no-rdoc bundler
bundle install --jobs=`nproc` --no-cache --local --frozen --system --without development test

rake clean
rake deploy

find ~/tooling-pending/vendor/cache/* -maxdepth 0 -type d | xargs -r rm -rv

# KCI uses versioned dirs, parts of the new tooling don&apos;t.
# This needs a capistrano-like solution for versioning.
rm -rf ~/tooling
ln -s tooling3 ~/tooling
</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.BuildTrigger>
      <childProjects><%= downstreams.join(', ') %></childProjects>
      <threshold>
        <name>UNSTABLE</name>
        <ordinal>1</ordinal>
        <color>YELLOW</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </hudson.tasks.BuildTrigger>
    <hudson.plugins.ws__cleanup.WsCleanup plugin="ws-cleanup@0.28">
      <deleteDirs>false</deleteDirs>
      <skipWhenFailed>false</skipWhenFailed>
      <cleanWhenSuccess>true</cleanWhenSuccess>
      <cleanWhenUnstable>true</cleanWhenUnstable>
      <cleanWhenFailure>true</cleanWhenFailure>
      <cleanWhenNotBuilt>true</cleanWhenNotBuilt>
      <cleanWhenAborted>true</cleanWhenAborted>
      <notFailBuild>false</notFailBuild>
      <cleanupMatrixParent>false</cleanupMatrixParent>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.WsCleanup>
    <hudson.plugins.ircbot.IrcPublisher plugin="ircbot@2.26">
      <targets>
        <hudson.plugins.im.GroupChatIMMessageTarget plugin="instant-messaging@1.35">
          <name>#pangea-monitoring</name>
          <notificationOnly>true</notificationOnly>
        </hudson.plugins.im.GroupChatIMMessageTarget>
      </targets>
      <strategy>FAILURE_AND_FIXED</strategy>
      <notifyOnBuildStart>false</notifyOnBuildStart>
      <notifySuspects>false</notifySuspects>
      <notifyCulprits>false</notifyCulprits>
      <notifyFixers>false</notifyFixers>
      <notifyUpstreamCommitters>false</notifyUpstreamCommitters>
      <buildToChatNotifier class="hudson.plugins.im.build_notify.PrintFailingTestsBuildToChatNotifier" plugin="instant-messaging@1.35"/>
      <matrixMultiplier>ONLY_CONFIGURATIONS</matrixMultiplier>
      <channels/>
    </hudson.plugins.ircbot.IrcPublisher>
  </publishers>
  <buildWrappers>
    <hudson.plugins.ws__cleanup.PreBuildCleanup plugin="ws-cleanup@0.28">
      <deleteDirs>false</deleteDirs>
      <cleanupParameter></cleanupParameter>
      <externalDelete></externalDelete>
    </hudson.plugins.ws__cleanup.PreBuildCleanup>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.7.2"/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
  <executionStrategy class="hudson.matrix.DefaultMatrixExecutionStrategyImpl">
    <runSequentially>false</runSequentially>
  </executionStrategy>
</matrix-project>
