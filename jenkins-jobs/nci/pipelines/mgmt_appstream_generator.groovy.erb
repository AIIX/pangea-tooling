env.DIST = '<%= dist %>'
env.TYPE = 'user'
env.APTLY_REPOSITORY = '<%= repo %>'

node('master') {
    wrap([$class: 'TimestamperBuildWrapper']) {
        wrap([$class: 'AnsiColorBuildWrapper', colorMapName: 'xterm']) {
            stage 'Checkout'
            // Frozen at 0.6.8 as newer versions require newer appstream AND
            // in turn newer glib/gobject-introspect. Since this is not worth
            // dealing with we'll simply freeze for xenial.
            if (env.DIST != 'xenial') {
                error 'This build is frozen at v0.6.7, should be unfrozen for bionic'
            }
            checkout([$class: 'GitSCM',
                      branches: [[name: 'refs/tags/v0.6.7']],
                      userRemoteConfigs: [[url: 'https://github.com/ximion/appstream-generator.git']]])

            stage 'Repository Setup'
            lts_exclude = ''
            <% unless repo.include?('lts') %>
            lts_exclude = '--exclude lts/'
            <% end %.
            sh "rsync -avH --delete $lts_exclude --exclude=*_armhf.deb --exclude=*_arm64.deb --exclude=*.dsc --exclude=*.tar.* neonarchives@archive-api.neon.kde.org:aptly/public/$APTLY_REPOSITORY/* aptly-repository/"

            stage 'Process'
            sh '~/tooling/nci/contain.rb /tooling/ci-tooling/nci/asgen.rb'

            stage 'Publish'
            sh '~/tooling/nci/asgen_push.rb'
            sh 'mkdir -p /var/www/metadata/appstream/$APTLY_REPOSITORY || true'
            sh 'cp -rv run/export/. /var/www/metadata/appstream/$APTLY_REPOSITORY'

            stage 'Cleanup'
            sh '#rm -rf aptly-repository'
        }
    }
}
