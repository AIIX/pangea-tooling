// env.RELEASEME_DEBUG = 1
env.RELEASEME_READONLY = 1

cleanNode('master') {
  stage('git') {
    git branch: "master", url: "https://anongit.kde.org/releaseme"
  }
  stage('plasma-tars') {
    dir('plasma') {
        sh './plasma-tars'
    }
    echo 'done'
  }
  stage('push') {
    echo 'done'
    dir('plasma') {
      sh '. ./VERSIONS.inc; mkdir -p /var/www/files/plasma/${VERSION}'
      sh '. ./VERSIONS.inc; cp -r ${VERSION}/*xz /var/www/files/plasma/${VERSION}/'
      sh '. ./VERSIONS.inc; cp -r ${VERSION}/${VERSION}-release-data /var/www/files/plasma/${VERSION}/'
      sh '. ./VERSIONS.inc; cp -r ${VERSION}/source-plasma-${VERSION}.inc /var/www/files/plasma/${VERSION}/'
    }
    echo 'Now available at http://files.xenon.pangea.pub/plasma/'
  }
  stage('QA') {
    dir('plasma') {
        sh './plasma-tars-qa'
        archiveArtifacts '*po-testoutput'
    }
    echo 'done'
  }
}

def cleanNode(label = null, body) {
  node(label) {
    deleteDir()
    try {
      wrap([$class: 'AnsiColorBuildWrapper', colorMapName: 'xterm']) {
        wrap([$class: 'TimestamperBuildWrapper']) {
          body()
        }
      }
    } finally {
      step([$class: 'WsCleanup', cleanWhenFailure: true])
    }
  }
}
