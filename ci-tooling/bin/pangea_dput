#!/usr/bin/env ruby
# frozen_string_literal: true
#
# Copyright (C) 2015-2016 Harald Sitter <sitter@kde.org>
# Copyright (C) 2015-2016 Rohan Garg <rohan@garg.io>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 2.1 of the License, or (at your option) version 3, or any
# later version accepted by the membership of KDE e.V. (or its
# successor approved by the membership of KDE e.V.), which shall
# act as a proxy defined in Section 6 of version 3 of the license.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this library.  If not, see <http://www.gnu.org/licenses/>.

require 'aptly'
require 'digest'
require 'optparse'
require 'ostruct'
require 'uri'
require 'net/ssh/gateway'

require_relative '../lib/ci/deb822_lister'

options = OpenStruct.new
options.host = 'localhost'
options.port = '9090'
options.repo = nil
options.gateway = URI('ssh://neonarchives@archive.neon.kde.org:9090')

parser = OptionParser.new do |opts|
  opts.banner = "Usage: #{opts.program_name} [options] --repo yolo CHANGESFILE"

  opts.on('-h', '--host HOST', "host name (#{options.host})") do |v|
    options.host = v
  end

  opts.on('-p', '--port PORT', "port number (#{options.port})") do |v|
    options.port = v
  end

  opts.on('-r', '--repo REPO', 'target repo name') do |v|
    options.repo = v
  end

  opts.on('-g', '--gateway URI', 'open gateway to remote') do |v|
    options.gateway = URI(v)
  end
end
parser.parse!

raise parser.help if ARGV.empty? || options.repo.nil?

if options.gateway
  case options.gateway.scheme
  when 'ssh'
    gateway = Net::SSH::Gateway.new(options.gateway.host, options.gateway.user)
    port = gateway.open('localhost', options.port)
  else
    raise 'Gateway scheme not supported'
  end
end

port ||= options.port

# Set the timeout to 5 minutes to allow upload of large packages such as firefox
Faraday.default_connection_options =
  Faraday::ConnectionOptions.new(timeout: 5 * 60)

Aptly.configure do |config|
  config.host = options.host
  config.port = port
end

raise 'Repository does not exist' unless Aptly::Repository.exist?(options.repo)
repo = Aptly::Repository.get(options.repo)

ARGV.each do |file|
  next unless File.size?(file)
  files = CI::Deb822Lister.files_to_upload_for(file)
  raise 'Changes lists no files to upload!?' if files.empty?
  puts "Uploading files... #{files}"
  repo.upload(files)
end

repo.published_in.each(&:update!)
